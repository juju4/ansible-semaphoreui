{{ ansible_managed | comment }}
#
# /etc/systemd/system/starbase.service
# Exposure level 3.3
#
[Unit]
Description=Semaphore UI
Documentation=https://docs.semaphoreui.com/
Wants=network-online.target
Wants=nginx.service
After=network-online.target
ConditionPathExists=/usr/bin/semaphore
ConditionPathExists=/etc/semaphore/config.json

[Service]
{% if semaphore_ansible == 'venv' %}
Environment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:{{ semaphoreui_venv }}/bin"
{%     for item in semaphoreui_systemd_execstartpre %}
ExecStartPre={{ item }}
{%     endfor %}
{% endif %}
ExecStart=/usr/bin/semaphore server --config /etc/semaphore/config.json
ExecReload=/bin/kill -HUP $MAINPID
Restart=always
RestartSec=10s
User={{ semaphoreui_user }}
Group={{ semaphoreui_user }}
{% if semaphoreui_webproxy_env_enable | bool %}
# https://github.com/semaphoreui/semaphore/issues/2706#issuecomment-2642796586
EnvironmentFile={{ semaphoreui_webproxy_env_file }}
Environment="SEMAPHORE_FORWARDED_ENV_VARS=[\"http_proxy\", \"https_proxy\"]"
{% endif %}

# Reduce Attack Surface
NoNewPrivileges=yes
# if tmp_path points to /tmp, need to look into /tmp/systemd-private-*-semaphoreui.service-*/tmp/
PrivateTmp=true
ProtectHome=true
ProtectSystem=true
{% if (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 21) or
      (ansible_distribution == 'Debian' and ansible_distribution_major_version|int >= 11)
%}
ProtectProc=noaccess
{% endif %}

PrivateDevices=yes
DeviceAllow=

PrivateUsers=false
DynamicUser=false

UMask=077

InaccessiblePaths=/proc

ProtectKernelTunables=true
ProtectKernelModules=yes
ProtectKernelLogs=yes
# ProtectHostname=yes
ProtectClock=yes
ProtectControlGroups=true
LockPersonality=true
RestrictRealtime=true
RestrictNamespaces=yes
RestrictSUIDSGID=yes
MemoryDenyWriteExecute=yes

# PrivateNetwork=yes
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
RestrictAddressFamilies=~AF_NETLINK AF_PACKET

IPAccounting=yes
# IPAddressAllow=localhost link-local multicast 10.0.0.0/8 192.168.0.0/16
# IPAddressDeny=

CapabilityBoundingSet=~CAP_AUDIT_CONTROL CAP_AUDIT_READ CAP_DAC_READ_SEARCH
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_PTRACE
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_NET_BIND_SERVICE CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_SYS_NICE CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_SYS_ADMIN
CapabilityBoundingSet=~CAP_SETUID CAP_SETGID
CapabilityBoundingSet=~CAP_SETPCAP
CapabilityBoundingSet=~CAP_CHOWN
CapabilityBoundingSet=~CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_NET_RAW
CapabilityBoundingSet=~CAP_IPC_LOCK

{% if not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )
%}
SystemCallFilter=@system-service
SystemCallFilter=~@debug @mount @cpu-emulation @obsolete @privileged @resources @reboot @swap @raw-io @module
# SystemCallFilter=~@debug @mount @cpu-emulation @obsolete @resources @reboot @swap @raw-io @module
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM
{% endif %}
SystemCallArchitectures=native

{% if semaphoreui_cgroups_restriction_enable | bool %}
CPUWeight={{ semaphoreui_cgroups_cpushares | default('1024') }}
CPUQuota={{ semaphoreui_cgroups_cpuquota | default('80%') }}
MemoryMax={{ semaphoreui_cgroups_memorylimit | default('4G') }}
{% endif %}

[Install]
WantedBy=multi-user.target
