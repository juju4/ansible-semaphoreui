---

- name: Converge
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
  remote_user: root
  vars:
    hardenwebserver_https_template: ../../templates/semaphore-nginx.conf.j2
    hardenwebserver_header_csp: "default-src 'none'; script-src 'self' 'unsafe-inline' 'report-sample'; connect-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self'; base-uri 'self'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests; report-uri /csp/report.php;"
    mysql_databases:
      - name: "{{ semaphoreui_db_name }}"
    mysql_users:
      - name: "{{ semaphoreui_db_user }}"
        host: localhost
        password: "{{ semaphoreui_db_pass }}"
        priv: "{{ semaphoreui_db_name }}.*:ALL"
  pre_tasks:
    - name: Ubuntu | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: RedHat | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (yum install -y python3)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Gather Facts
      ansible.builtin.setup:
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: Ubuntu Bionic+, Redhat 8+ | Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: >
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
    - name: Set fact is_container
      ansible.builtin.set_fact:
        is_container: true
      when: >
        (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker"
           or ansible_virtualization_type == "containerd"
           or ansible_virtualization_type == "container"
          )
        )
  roles:
    - juju4.harden_nginx
    - geerlingguy.mysql
    - juju4.semaphoreui
